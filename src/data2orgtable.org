#+TITLE: Matlab Data To Org Table
#+PROPERTY: header-args:matlab :tangle data2orgtable.m

* Documentation
#+begin_src matlab
  function [strarray] = data2orgtable(data, labels_row, labels_col, str_format)
#+end_src

* Initialize parameters
#+begin_src matlab
  if nargin == 3
    str_format = ' %.1f ';
  end

  strarray = '';
#+end_src

* Main algorithm
** One label for each row and each column
#+begin_src matlab
  if length(labels_col) == size(data, 2) && length(labels_row) == size(data, 1)
    strarray = [strarray, ' | ', strjoin(labels_col, ' | '), sprintf('\n')];
    for rowi = 1:size(data, 1)
      strarray = [strarray, labels_row{rowi}, ' | ', strjoin(strsplit(num2str(data(rowi, :), str_format)), ' | '), sprintf('\n')];
    end
#+end_src

** First columns label corresponds to the label for the rows
#+begin_src matlab
  elseif length(labels_col) == size(data, 2)+1  && length(labels_row) == size(data, 1)
    strarray = [strarray, strjoin(labels_col, ' | '), sprintf('\n')];
    for rowi = 1:size(data, 1)
      strarray = [strarray, labels_row{rowi}, ' | ', strjoin(strsplit(num2str(data(rowi, :), str_format)), ' | '), sprintf('\n')];
    end
#+end_src

** Labels only for the columns
#+begin_src matlab
  elseif length(labels_col) == size(data, 2) && length(labels_row) == 0
    strarray = [strarray, strjoin(labels_col, ' | '), sprintf('\n')];
    for rowi = 1:size(data, 1)
      strarray = [strarray, strjoin(strsplit(num2str(data(rowi, :), str_format)), ' | '), sprintf('\n')];
    end
#+end_src

** First row label corresponds to the label for the columns
#+begin_src matlab
  elseif length(labels_row) == size(data, 1)+1  && length(labels_col) == size(data, 2)
    strarray = [strarray, labels_row{1}, ' | ', strjoin(labels_col, ' | '), sprintf('\n')];
    for rowi = 1:size(data, 1)
      strarray = [strarray, labels_row{rowi+1}, ' | ', strjoin(strsplit(num2str(data(rowi, :), str_format)), ' | '), sprintf('\n')];
    end
#+end_src

** Labels only for the rows
#+begin_src matlab
  elseif length(labels_row) == size(data, 1) && length(labels_col) == 0
    for rowi = 1:size(data, 1)
      strarray = [strarray, labels_row{rowi}, ' | ', strjoin(strsplit(num2str(data(rowi, :), str_format)), ' | '), sprintf('\n')];
    end
#+end_src

** No labels, only data
#+begin_src matlab
  elseif length(labels_row) == 0 && length(labels_col) == 0
    for rowi = 1:size(data, 1)
      strarray = [strarray, strjoin(strsplit(num2str(data(rowi, :), str_format)), ' | '), sprintf('\n')];
    end
  end
#+end_src
* Example
  :PROPERTIES:
  :HEADER-ARGS:matlab+: :tangle no
  :END:

#+begin_src matlab :results value table :exports both :session *MATLABORG*
  x = 1:5;
  y = sqrt(x);
  data = [x;y];

  ans = data2orgtable(data, {'x', 'y'}, {}, ' %.1f ');
#+end_src

#+RESULTS:
| x | 1.0 | 2.0 | 3.0 | 4.0 | 5.0 |
| y | 1.0 | 1.4 | 1.7 | 2.0 | 2.2 |

#+begin_src matlab :results value table :exports both :session *MATLABORG*
  x = 1:5;
  y = sqrt(x);
  data = [x;y];

  ans = data2orgtable(data, {}, {}, ' %.1f ');
#+end_src

#+RESULTS:
| 1.0 | 2.0 | 3.0 | 4.0 | 5.0 |
| 1.0 | 1.4 | 1.7 | 2.0 | 2.2 |

#+begin_src matlab :results value table :exports both :session *MATLABORG*
  x = 1:5;
  y = sqrt(x);
  data = [x;y]';

  ans = data2orgtable(data, {}, {'x', 'y'}, ' %.1f ');
#+end_src

#+RESULTS:
|   x |   y |
| 1.0 | 1.0 |
| 2.0 | 1.4 |
| 3.0 | 1.7 |
| 4.0 | 2.0 |
| 5.0 | 2.2 |
